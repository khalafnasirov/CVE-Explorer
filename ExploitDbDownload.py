from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.by import By
import time, os
from event_manager import EventManager
import DataValues as dv
from ChromeOperations import CheckChrome
from ChromeOperations import RunUrl

opts = Options()
event_manager = EventManager()

downloads_folder = os.path.join(os.path.expandvars("%USERPROFILE%"), "Downloads")


def DownloadAnyExploit(download_url):
    RunUrl(download_url)

def RunExploitDbSelenium(search_query):

    if not CheckChrome():
        event_manager.trigger_event("chrome_not_installed_event")
        return

    dv.download_path = downloads_folder
    chrome_user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36"
    opts.add_argument(f"user-agent={chrome_user_agent}")

    driver = webdriver.Chrome(options=opts)

    driver.get(f"https://www.exploit-db.com/search?cve={search_query}")

    time.sleep(2)

    download_links = driver.find_elements(By.XPATH, '//table[@id="exploits-table"]/tbody//a[@href]')

    if download_links != []:
        counter = 0
        href_link = ""
        title_name = ""
        for link in download_links:
            if "download" in str(link.get_attribute("href")):
                href_link = str(link.get_attribute('href'))
                counter += 1
            if "exploits" in str(link.get_attribute("href")):
                title_name = link.accessible_name
                counter += 1
            if counter == 2:
                dv.exploit_db_links.append([title_name, href_link])
                href_link = ""
                title_name = ""
                counter = 0
    
    if dv.exploit_db_links:
        dv.exploitdb_status = True
    else:
        dv.exploitdb_status = False
    
    dv.is_exploitdb_searched = True
